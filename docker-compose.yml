version: "3"

services:
  my-app:
    image: cr.yandex/${REGISTRY_ID}/dealer:latest
    build:
      context: .
    depends_on:
      - mongodb
    environment:
      env_file:
        .env
    ports:
      - "${PORT:-3000}:3000"
    restart: always
    networks:
      - awesome
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  mongodb:
    image: mongo:6.0.1
    restart: always
    ports:
      - "27017:27017"
    networks:
      - awesome

#  nginx:
#    image: nginx
#    restart: always
#    container_name: nginx
#    volumes:
#      # - ./nginx/certs:/etc/nginx/certs
#      - ./data/nginx/core/default.conf:/etc/nginx/conf.d/default.conf
#      - ./data/nginx/logs/:/var/log/nginx/
#      # - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#
#    depends_on:
#      - my-app
#    ports:
#      - "80:80"
#      - "443:443"
#    networks:
#      - awesome
#    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

#  certbot:
#   image: certbot/certbot
#   restart: unless-stopped
#   volumes:
#     - ./data/certbot/conf:/etc/letsencrypt
#     - ./data/certbot/www:/var/www/certbot
#   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#   networks:
#     - awesome
#   depends_on:
#    - nginx

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
